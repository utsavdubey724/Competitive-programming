/*
Problem:    389. Find the Difference
Date:       Jan 22, 2021
Author:     Utsav Dubey, utsav_201700433@smit.smu.edu.in
Difficulty: Easy
Source:     https://leetcode.com/problems/find-the-difference/

Question:
You are given two strings s and t.
String t is generated by random shuffling string s and then add one more letter at a random position.
Return the letter that was added to t.

Example 1:
Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.

Example 2:
Input: s = "", t = "y"
Output: "y"

Example 3:
Input: s = "a", t = "aa"
Output: "a"

Example 4:
Input: s = "ae", t = "aea"
Output: "a"
 

Constraints:
0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lower-case English letters.
*/


namespace{
    class Solution {
    public:
        char findTheDifference(string s, string t) {
            char c=0;
            for(char cs : s)
                c = c^cs;
            for(char ct : t)
                c = c^ct;
            return c;
        }
        /*char findTheDifference(string s, string t) {
            vector<int> v(26,0);
            for(int i=0;i<s.length();i++)
                v[s[i]-'a']++;
            for(int i=0;i<t.length();i++)
                v[t[i]-'a']--;
            for(int i=0;i<26;i++)
                if(v[i]==-1)
                    return i +'a';
            return {};      
        }*/
        /*char findTheDifference(string s, string t) {
            unordered_map<char,int> myMap;
            for(int i=0;i<s.length();i++)
                myMap[s[i]]++;
            for(int i=0;i<t.length();i++)
                myMap[t[i]]--;
            for(auto it=myMap.begin();it!=myMap.end();it++){
                if(it->second==-1)
                    return it->first;
            }
            return {};
        }*/
        /*char findTheDifference(string s, string t) {
            sort(s.begin(),s.end());
            sort(t.begin(),t.end());
            int i,j;
            for(i=0,j=0;i<s.size() && j<t.size();i++,j++){
                if(s[i] != t[j]){
                    break;
                }
            }
            return t[j];
        }*/
        /*char findTheDifference(string s, string t) {
            unordered_map<char,int> mySMap;
            for(int i=0;i<s.size();i++)
                mySMap[s[i]]++;
            unordered_map<char,int> myTMap;
            for(int i=0;i<t.size();i++)
                myTMap[t[i]]++;

            for(auto it=myTMap.begin();it!=myTMap.end();it++){
                char current=it->first;
                if(mySMap.find(current)==mySMap.end() || mySMap[current]!=it->second)
                    return current;
            }
            return {};
        }*/
    };
    static const auto fast=[]() {ios_base::sync_with_stdio(false);
                                 cin.tie(nullptr);cout.tie(nullptr);
                                 return nullptr;}();
}
